"use strict";(self.webpackChunkgo_micro=self.webpackChunkgo_micro||[]).push([[8954],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=s(n),u=o,k=d["".concat(p,".").concat(u)]||d[u]||m[u]||r;return n?a.createElement(k,l(l({ref:t},c),{},{components:n})):a.createElement(k,l({ref:t},c))}));function k(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[d]="string"==typeof e?e:o,l[1]=i;for(var s=2;s<r;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4446:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>s});var a=n(7462),o=(n(7294),n(3905));const r={title:"Locally deploy Docker development environment",description:"Locally deploy Docker development environment",tags:["deploy","docker","development","environment","local"],image:"/assets/thoughts/devops/develop_docker_deploy/vng19.jpeg",hide_table_of_contents:!1},l=void 0,i={permalink:"/2023/09/09/locally-deploy-docker-development-environment",source:"@site/blog/2023-09-09-locally-deploy-docker-development-environment.md",title:"Locally deploy Docker development environment",description:"Locally deploy Docker development environment",date:"2023-09-09T00:00:00.000Z",formattedDate:"September 9, 2023",tags:[{label:"deploy",permalink:"/tags/deploy"},{label:"docker",permalink:"/tags/docker"},{label:"development",permalink:"/tags/development"},{label:"environment",permalink:"/tags/environment"},{label:"local",permalink:"/tags/local"}],readingTime:.985,hasTruncateMarker:!0,authors:[],frontMatter:{title:"Locally deploy Docker development environment",description:"Locally deploy Docker development environment",tags:["deploy","docker","development","environment","local"],image:"/assets/thoughts/devops/develop_docker_deploy/vng19.jpeg",hide_table_of_contents:!1},nextItem:{title:"Go-Micro easily connects to the EFK log system",permalink:"/2023/09/06/go-micro-easily-connects-to-efk-log-system"}},p={authorsImageUrls:[]},s=[{value:"Overview",id:"overview",level:2},{value:"Relational Database",id:"relational-database",level:2},{value:"MySQL",id:"mysql",level:3},{value:"PostgreSQL",id:"postgresql",level:3},{value:"MariaDB",id:"mariadb",level:3}],c={toc:s},d="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"overview"},"Overview"),(0,o.kt)("admonition",{title:"NOTE",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Bash's newlines are ",(0,o.kt)("inlineCode",{parentName:"p"},"\\\\")),(0,o.kt)("p",{parentName:"admonition"},"The newline character of CMD is ",(0,o.kt)("inlineCode",{parentName:"p"},"\\^")),(0,o.kt)("p",{parentName:"admonition"},"Brief analysis of parameters:"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-p host port:container port")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-e key=value")))),(0,o.kt)("p",null,"Need to set Host:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"# Added by Docker Desktop\n192.168.1.6 host.docker.internal\n192.168.1.6 gateway.docker.internal\n# To allow the same kube context to work on the host and the container:\n192.168.1.6 kubernetes.docker.internal\n# End of section\n")),(0,o.kt)("h2",{id:"relational-database"},"Relational Database"),(0,o.kt)("h3",{id:"mysql"},"MySQL"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"docker pull bitnami/mysql:latest\n\ndocker run -itd \\\n    --name mysql-dev \\\n    -p 3306:3306 \\\n    -e ALLOW_EMPTY_PASSWORD=yes \\\n    -e MYSQL_ROOT_PASSWORD=123456 \\\n    bitnami/mysql:latest\n")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Default account: ",(0,o.kt)("inlineCode",{parentName:"p"},"root")),(0,o.kt)("p",{parentName:"admonition"},"Default password: ",(0,o.kt)("inlineCode",{parentName:"p"},"123456"))),(0,o.kt)("h3",{id:"postgresql"},"PostgreSQL"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'docker pull bitnami/postgresql:latest\ndocker pull bitnami/postgresql-repmgr:latest\ndocker pull bitnami/pgbouncer:latest\ndocker pull bitnami/pgpool:latest\ndocker pull bitnami/postgres-exporter:latest\n\ndocker run -itd \\\n    --name postgres-dev \\\n    -p 5432:5432 \\\n    -e POSTGRES_PASSWORD=123456 \\\n    bitnami/postgresql:latest\n\ndocker exec -it postgres-dev "apt update"\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},'CREATE EXTENSION IF NOT EXISTS "uuid-ossp";\nCREATE EXTENSION IF NOT EXISTS "postgis";\n\nSELECT version();\nSELECT postgis_full_version();\n')),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Default account: ",(0,o.kt)("inlineCode",{parentName:"p"},"postgres")),(0,o.kt)("p",{parentName:"admonition"},"Default password: ",(0,o.kt)("inlineCode",{parentName:"p"},"123456"))),(0,o.kt)("h3",{id:"mariadb"},"MariaDB"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"docker pull bitnami/mariadb:latest\n\ndocker run -itd \\\n    --name mariadb-dev \\\n    -p 3306:3306 \\\n    -e ALLOW_EMPTY_PASSWORD=yes \\\n    -e MARIADB_ROOT_PASSWORD=123456 \\\n    bitnami/mariadb:latest\n")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Default account: ",(0,o.kt)("inlineCode",{parentName:"p"},"root")),(0,o.kt)("p",{parentName:"admonition"},"Default password: ",(0,o.kt)("inlineCode",{parentName:"p"},"123456"))))}m.isMDXComponent=!0}}]);