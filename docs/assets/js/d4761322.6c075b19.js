"use strict";(self.webpackChunkgo_micro=self.webpackChunkgo_micro||[]).push([[5344],{3905:(t,e,a)=>{a.d(e,{Zo:()=>p,kt:()=>m});var r=a(7294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},l=Object.keys(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var s=r.createContext({}),u=function(t){var e=r.useContext(s),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},p=function(t){var e=u(t.components);return r.createElement(s.Provider,{value:e},t.children)},d="mdxType",c={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},g=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,l=t.originalType,s=t.parentName,p=o(t,["components","mdxType","originalType","parentName"]),d=u(a),g=n,m=d["".concat(s,".").concat(g)]||d[g]||c[g]||l;return a?r.createElement(m,i(i({ref:e},p),{},{components:a})):r.createElement(m,i({ref:e},p))}));function m(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var l=a.length,i=new Array(l);i[0]=g;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o[d]="string"==typeof t?t:n,i[1]=o;for(var u=2;u<l;u++)i[u]=a[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}g.displayName="MDXCreateElement"},5423:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var r=a(7462),n=(a(7294),a(3905));const l={title:"First app and basic structure in Flutter",description:"First app and basic structure in Flutter",tags:["flutter","tutorial","app"],hide_table_of_contents:!1},i=void 0,o={permalink:"/2019/08/25/first-app-and-basic-structure-in-flutter",source:"@site/blog/2019-08-25-first-app-and-basic-structure-in-flutter.md",title:"First app and basic structure in Flutter",description:"First app and basic structure in Flutter",date:"2019-08-25T00:00:00.000Z",formattedDate:"August 25, 2019",tags:[{label:"flutter",permalink:"/tags/flutter"},{label:"tutorial",permalink:"/tags/tutorial"},{label:"app",permalink:"/tags/app"}],readingTime:3.955,hasTruncateMarker:!0,authors:[],frontMatter:{title:"First app and basic structure in Flutter",description:"First app and basic structure in Flutter",tags:["flutter","tutorial","app"],hide_table_of_contents:!1},prevItem:{title:"Localization & switching locales in Flutter",permalink:"/2019/08/27/localization-and-switching-locales-in-flutter"}},s={authorsImageUrls:[]},u=[{value:"Installing Flutter",id:"installing-flutter",level:3},{value:"IDE &amp; Plugins",id:"ide--plugins",level:3},{value:"Creating a new Flutter apps",id:"creating-a-new-flutter-apps",level:3},{value:"Launching app",id:"launching-app",level:3},{value:"Project Structure",id:"project-structure",level:3},{value:"Directory Structure",id:"directory-structure",level:3}],p={toc:u},d="wrapper";function c(t){let{components:e,...a}=t;return(0,n.kt)(d,(0,r.Z)({},p,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Flutter is a new Open Source framework created by Google that focuses on the creation of cross platform application. Flutter primarily targets iOS and Android, but is increasingly adding support for desktop and web platform too."),(0,n.kt)("p",null,"Flutter apps are built using the Dart programming language. If you're new to Dart, you may want to start by ",(0,n.kt)("a",{parentName:"p",href:"https://dart.dev/guides/language/language-tour"},"getting a general overview")," of the language first."),(0,n.kt)("p",null,"In this article, we're going to create our first application and built up ourselves basic application structures."),(0,n.kt)("h3",{id:"installing-flutter"},"Installing Flutter"),(0,n.kt)("p",null,"We can install Flutter on our machine in a variety of ways. The easiest way to get started is to download the installer from the Flutter website."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"https://flutter.dev/docs/get-started/install/macos"},"MacOs"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"https://flutter.dev/docs/get-started/install/windows"},"Windows"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"https://docs.flutter.dev/get-started/install/linux"},"Linux")))),(0,n.kt)("h3",{id:"ide--plugins"},"IDE & Plugins"),(0,n.kt)("p",null,"I'd recommend that you either use Android studio or Visual Studio Code for your Flutter development. Android studio offers and integrated, feature-rich IDE with support for Flutter, whereas Visual Studio Code offers more lightweight, but functional support."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"To install the Flutter plugin for Android Studio, open up the plugin preferences using ",(0,n.kt)("strong",{parentName:"li"},"Preferences > Plugins")," on macOS, ",(0,n.kt)("strong",{parentName:"li"},"File > Settings")," > Plugins on Windows & Linux. From there, search for the Flutter plugin within the repository list and click install."),(0,n.kt)("li",{parentName:"ul"},"To install the Flutter plugin for Visual Studio Code, search the store for ",(0,n.kt)("strong",{parentName:"li"},"Flutter")," or click install from ",(0,n.kt)("a",{parentName:"li",href:"https://marketplace.visualstudio.com/items?itemName=Dart-Code.flutter"},"the following page"),".")),(0,n.kt)("h3",{id:"creating-a-new-flutter-apps"},"Creating a new Flutter apps"),(0,n.kt)("p",null,"Assuming that you're installed Flutter and have the appropriate dependencies (Android Studio / XCode) installed. We can go ahead and create a new Flutter app. This can be done in numerous ways, but I find the easiest ways are to do it via the Terminal. Let's use the terminal in this case:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-console"},"$ flutter create hello_flutter\nCreating project hello_flutter...\nAll done!\nIn order to run your application, type:\n- cd hello_flutter\n- flutter run\n")),(0,n.kt)("h3",{id:"launching-app"},"Launching app"),(0,n.kt)("p",null,"As anticipated, this will go ahead and create a new Flutter project for us and open it up inside of Android Studio. We can then open this using the Flutter plugin for Android Studio."),(0,n.kt)("p",null,"With default configuration focus on main.dart, simply we're hit to choose the simulator (Android or iPhone) for running. I've selected this iOS Simulator for this. We should then see our demo application."),(0,n.kt)("img",{src:"/assets/thoughts/flutter-mobile/hello-flutter/first-run-app.png",width:"100%",alt:"flutter first app"}),(0,n.kt)("p",null,"And now, you'll wonder how to write a really application with Flutter. An application has a lot of screens, lots of feature and many processing logic like network, database, etc. Let me suggest you a clearly structure of Flutter project."),(0,n.kt)("h3",{id:"project-structure"},"Project Structure"),(0,n.kt)("p",null,"Using the state management framework in your project is ",(0,n.kt)("strong",{parentName:"p"},"Provider"),", and apply the architecture of the entire project is as follows"),(0,n.kt)("img",{src:"/assets/thoughts/flutter-mobile/hello-flutter/mvp.png",width:"100%",alt:"MVP project structure"}),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The ",(0,n.kt)("strong",{parentName:"li"},"View")," layer is used to display layouts and is a variety of ",(0,n.kt)("strong",{parentName:"li"},"StatelessWidget")," pages wrapped by ",(0,n.kt)("strong",{parentName:"li"},"ChangeNotifierProvider"),"."),(0,n.kt)("li",{parentName:"ul"},"The ",(0,n.kt)("strong",{parentName:"li"},"Model")," layer is used to process data and is variety of Model classes that inherit ",(0,n.kt)("strong",{parentName:"li"},"ChangeNotifier")),(0,n.kt)("li",{parentName:"ul"},"The ",(0,n.kt)("strong",{parentName:"li"},"Logic")," layer doesn't save any data, only logic operation.")),(0,n.kt)("p",null,"Does it look like the ",(0,n.kt)("strong",{parentName:"p"},"MVP")," pattern in Android? In fact, they are all similar, but the names are slightly different. You can also think of the above mode as the MVP mode."),(0,n.kt)("p",null,"Flutter is particularly well suited for this architectural model, because the view changes with the data, you basically don't have to care about the View, just go and operate on the data."),(0,n.kt)("h3",{id:"directory-structure"},"Directory Structure"),(0,n.kt)("p",null,"The project directory structure is as follows:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"\u251c\u2500\u2500 android\n\u251c\u2500\u2500 images\n\u251c\u2500\u2500 ios\n\u251c\u2500\u2500 lib\n\u251c\u2500\u2500 local_json\n\u251c\u2500\u2500 res\n\u251c\u2500\u2500 ...\n")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Directory"),(0,n.kt)("th",{parentName:"tr",align:null},"Explain"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"images"),(0,n.kt)("td",{parentName:"tr",align:null},"For storing various pictures")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"local_json"),(0,n.kt)("td",{parentName:"tr",align:null},"I encapsulate the Icon information of Flutter into a Json file and store it in this directory")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"res"),(0,n.kt)("td",{parentName:"tr",align:null},'Store the language files generated by the "intl" plugin')))),(0,n.kt)("p",null,"Let me explain the other directories besides ",(0,n.kt)("strong",{parentName:"p"},"lib"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"\u251c\u2500\u2500 config\n\u251c\u2500\u2500 database\n\u251c\u2500\u2500 l10n\n\u251c\u2500\u2500 items\n\u251c\u2500\u2500 json\n\u251c\u2500\u2500 logic\n\u251c\u2500\u2500 model\n\u251c\u2500\u2500 pages\n\u251c\u2500\u2500 utils\n\u251c\u2500\u2500 widgets\n\u251c\u2500\u2500 main.dart\n")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Directory"),(0,n.kt)("th",{parentName:"tr",align:null},"Explain"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"config"),(0,n.kt)("td",{parentName:"tr",align:null},"Store various configuration classes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"database"),(0,n.kt)("td",{parentName:"tr",align:null},"Store database operation related classes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"l10n"),(0,n.kt)("td",{parentName:"tr",align:null},"Class for storing internationalized related operations")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"items"),(0,n.kt)("td",{parentName:"tr",align:null},"Item class that stores part of the List list")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"json"),(0,n.kt)("td",{parentName:"tr",align:null},"Various network requests, databases, etc. related json files")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"logic"),(0,n.kt)("td",{parentName:"tr",align:null},"Logic layer directory")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"model"),(0,n.kt)("td",{parentName:"tr",align:null},"Model layer directory")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"pages"),(0,n.kt)("td",{parentName:"tr",align:null},"Store each page, which is the directory of the View layer")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"utils"),(0,n.kt)("td",{parentName:"tr",align:null},"Packaged tools, such as file operations")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"widgets"),(0,n.kt)("td",{parentName:"tr",align:null},"custom widgets")))),(0,n.kt)("p",null,"I'd now suggest that you play around with Flutter using this example application. Change the text, do something funky things with the calculations, add new function and enjoy with new project structure. You can also reference the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/devexps/flutter/tree/master/mobile/hello_flutter"},"source code")," here!"),(0,n.kt)("p",null,"I'll see you next article, enjoy!"))}c.isMDXComponent=!0}}]);